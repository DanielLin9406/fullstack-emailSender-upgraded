{
  "name": "email-sender-front-end",
  "version": "0.1.0",
  "description": "PositiveGrid Price Center Frontend",
  "main": "index.js",
  "proxy": {
    "/auth/google": {
      "target": "http://localhost:5000"
    },
    "/api/*": {
      "target": "http://localhost:5000"
    }
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1",
    "start": "NODE_ENV=development npx webpack-dev-server --config webpack.js --color --progress --hot",
    "start:stage": "NODE_ENV=development NODE_ENV_API=stage npx webpack-dev-server --config webpack.js --color --progress --hot",
    "start:dev": "NODE_ENV=development NODE_ENV_API=apiDoc npx webpack-dev-server --config webpack.js --color --progress --hot",
    "start:jsonserver": "npm run mock & npm run mockDev",
    "mock": "npx json-server mock/mock.js --watch --port 8090",
    "mockDev": "NODE_ENV=development NODE_ENV_API=jsonserver npx webpack-dev-server --config webpack.js --color --progress --hot",
    "build:prod": "NODE_ENV=production NODE_ENV_API=prodution npx webpack --config webpack.js",
    "build:stage": "NODE_ENV=production NODE_ENV_API=stage npx webpack --config webpack.js",
    "build:dev": "NODE_ENV=production NODE_ENV_API=apiDoc npx webpack --config webpack.js",
    "heroku:build":"NODE_ENV=production NODE_ENV_API=apiDoc npx webpack --config webpack.js",
    "httpServer": "npm run build:stage & http-server ./client/build/"
  },
  "dependencies": {
    "@fortawesome/fontawesome-svg-core": "^1.2.10",
    "@fortawesome/free-solid-svg-icons": "^5.6.1",
    "@fortawesome/react-fontawesome": "^0.1.3",
    "@hot-loader/react-dom": "^16.8.6",
    "@shinin/load-script": "^1.0.4",
    "@shinin/request": "^1.0.7",
    "axios": "^0.18.0",
    "date-fns": "^1.30.1",
    "firebase": "^5.7.2",
    "history": "^4.7.2",
    "js-cookie": "^2.2.0",
    "lodash": "^4.17.11",
    "materialize-css": "^1.0.0-rc.2",
    "moment": "^2.23.0",
    "moment-timezone": "^0.5.23",
    "optimize-css-assets-webpack-plugin": "^5.0.1",
    "react": "^16.7.0-alpha.2",
    "react-big-calendar": "^0.20.2",
    "react-day-picker": "^7.2.4",
    "react-dom": "^16.7.0-alpha.2",
    "react-frontload": "^1.0.3",
    "react-helmet": "^5.2.0",
    "react-hot-loader": "^4.0.0",
    "react-loadable": "^5.5.0",
    "react-loading": "^2.0.3",
    "react-moment": "^0.8.4",
    "react-redux": "^5.1.1",
    "react-router": "^4.3.1",
    "react-router-dom": "^4.2.2",
    "react-sortable-hoc": "^0.8.4",
    "react-stripe-checkout": "^2.6.3",
    "redux": "^3.7.2",
    "redux-saga": "^0.16.2",
    "redux-thunk": "^2.3.0",
    "stringify-object-values": "^0.1.0",
    "styled-components": "^4.2.0"
  },
  "devDependencies": {
    "@babel/core": "^7.2.0",
    "@babel/plugin-proposal-class-properties": "^7.2.1",
    "@babel/plugin-proposal-export-default-from": "^7.2.0",
    "@babel/plugin-proposal-export-namespace-from": "^7.2.0",
    "@babel/plugin-proposal-optional-chaining": "^7.2.0",
    "@babel/plugin-syntax-dynamic-import": "^7.2.0",
    "@babel/plugin-transform-runtime": "^7.2.0",
    "@babel/preset-env": "^7.2.0",
    "@babel/preset-react": "^7.0.0",
    "@babel/register": "^7.0.0",
    "babel-loader": "^8.0.0-beta.0",
    "clean-webpack-plugin": "^0.1.16",
    "css-loader": "^0.28.7",
    "eslint": "^5.16.0",
    "eslint-plugin-react": "^7.12.4",
    "extract-text-webpack-plugin": "^4.0.0-beta.0",
    "file-loader": "^2.0.0",
    "html-webpack-plugin": "^3.0.7",
    "json-loader": "^0.5.7",
    "json-server": "^0.12.1",
    "mini-css-extract-plugin": "^0.4.4",
    "mockjs": "^1.0.1-beta3",
    "node-sass": "^4.0.0",
    "open-browser-webpack-plugin": "0.0.5",
    "postcss-cssnext": "^3.1.0",
    "postcss-loader": "^2.0.6",
    "postcss-preset-env": "^3.0.2",
    "sass-loader": "^6.0.6",
    "style-loader": "^0.18.2",
    "uglifyjs-webpack-plugin": "^1.0.0",
    "url-loader": "^0.5.9",
    "webpack": "^4.0.0",
    "webpack-assets-manifest": "^3.1.1",
    "webpack-cli": "^3.3.0",
    "webpack-dev-middleware": "^3.4.0",
    "webpack-dev-server": "^3.0.0",
    "webpack-merge": "^4.1.0"
  },
  "babel": {
    "presets": [
      [
        "@babel/preset-env",
        {
          "targets": {
            "node": "current"
          }
        }
      ]
    ]
  },
  "eslintConfig": {
    "extends": "react-app",
    "parserOptions": {
      "ecmaFeatures": {
        "legacyDecorators": true
      }
    },
    "rules": {
      "import/order": "warn"
    }
  }
}
